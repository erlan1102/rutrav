import React, {createContext, useState} from 'react'import axios from "axios";export const CustomContext = createContext();export const Context = (props) => {    const [all, setAll] = useState([]);    const [cart, setCart] = useState([]);    const [call, setCall] = useState(false);    const [search, setSearch] = useState(false);    const [searchVal, setSearchVal] = useState('');    const [ware, setWare] = useState([]);    const addReview = (e) =>{        e.preventDefault();        axios.post('https://formsubmit.co/erlanisakov60@gmail.com', {            name: e.target[0].value,            tel: e.target[1].value,            question: e.target[2].value        }).then(({data})=> {            console.log(data);            e.target[0].value = '';            e.target[1].value = '';            e.target[2].value = '';        });    };    const addItem = (title,count) => {        let idx = all.findIndex((item) => item.title === title );        if (cart.filter((item) => item.title === title ).length) {            setCart(cart.map((item) => {                if (item.title === title){                    return {...item, count: +item.count + +count}                } else {                    return item                }            }))        } else {            setCart([...cart, {                ...all[idx],                count: count            }])        }    };    const plusOne = (item) =>{        let idx = cart.findIndex((el)=> {            if (item.categories === 'pizza'){                return el.title === item.title && el.size === item.size            } else{                return el.title === item.title            }        });        if (idx >= 0){            setCart(cart.map((el)=> {                if (item.categories === 'pizza'){                    if (item.title === el.title && el.size === item.size){                        return {...el, count: el.count + 1}                    }                    return el                } else if (item.title === el.title){                    return {...el, count: el.count + 1}                } else {                    return el                }            }))        } else {            setCart([...cart, {                ...item,                count: 1            }])}    };    const minusOne = (item) => {        let idx = cart.findIndex((el)=> {            if (item.categories === 'pizza'){                return el.title === item.title && el.size === item.size            } else{                return el.title === item.title            }        });        if (cart[idx].count > 1){            setCart(cart.map((el)=> {                if (item.title === el.title){                    return {...el, count: el.count - 1}                } else {                    return el                }            }))        } else {            setCart(cart.filter((el)=> {                if (el.categories === 'pizza'){                    return el.title !== item.title || el.size !== item.size                } else{                    return el.title !== item.title                }            }))        }    };    const deleteItem = (title) =>{        setCart(cart.filter((el)=> {            return el.title !== title        }))    };    const value = {        all,        setAll,        cart,        call,        setCall,        addItem,        plusOne,        minusOne,        setCart,        deleteItem,        search,        setSearch,        searchVal,        setSearchVal,        addReview,        ware,        setWare    };    return <CustomContext.Provider value={value}>        {props.children}    </CustomContext.Provider>};